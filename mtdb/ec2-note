Running on EC2 VM

Set hostname
	Dot in the hostname doesn't work, i.e., hostname0=ec2-m3.xlarge.s0
	Excute both for export ec2-s0-m3-xlarge ec2-c0-m3-xlarge

	export hostname0=ec2-s0-m3-xlarge \
	&& sudo sed -i 's/localhost$/localhost '$hostname0'/g' /etc/hosts \
	&& sudo bash -c 'echo '$hostname0' > /etc/hostname' \
	&& sudo hostname --file /etc/hostname

	exit and login back


Install packages
	(will be prompted for an Oracle binary code license)

	sudo add-apt-repository -y ppa:webupd8team/java \
	&& sudo apt-get update \
	&& sudo apt-get install oracle-java8-installer git ctags ant htop tree maven gnuplot-nox ntp -y \
	&& sudo apt-get autoremove -y vim-tiny


Set up repositories and dev envs
	(will be prompted for if you trust the server)

	mkdir work \
	&& cd work \
	&& git clone git@github.com:hobinyoon/linux-home.git \
	&& git clone git@github.com:hobinyoon/apache-cassandra-2.2.3-src.git \
	&& ln -s apache-cassandra-2.2.3-src cassandra \
	&& cd linux-home \
	&& ./setup-linux.sh \
	&& sudo mkdir -p /mnt/s5-cass-cold-storage/mtdb-cold \
	&& sudo chown -R ubuntu /mnt/s5-cass-cold-storage/mtdb-cold \

	exit and login back


Set firewall rules
	Server
	  Allow client machine to connect to server machine on AWS console
	  Open ntp port

		Allow inbound TCP 9042 10.152.33.227/32
		Allow inbound UCP 123  0.0.0.0/0

	Client
		Allow inbound UCP 123  0.0.0.0/0


Set server address on client machine
	vi ~/.bashrc
		export CASSANDRA_SERVER_ADDR=10.139.123.60

	vi ~/.bashrc
		export CASSANDRA_CLIENT_ADDR=10.152.33.227

	
One-time synchronization of clocks both on server and client
	sudo service ntp stop \
	&& sudo ntpdate -bv 0.ubuntu.pool.ntp.org \
	&& sudo service ntp start


Running Cassandra server
	screen
	cdcass && time ant && bin/cassandra -f | grep --color -E '^|MTDB:'


Run loadgen client
	cd ~/work/cassandra/mtdb/loadgen \
	&& ./create-db.sh \
	&& ./loadgen


Get loadgen client log to server machine. Better do this on the server node,
which is likely to have bigger log files
	rsync -av $CASSANDRA_CLIENT_ADDR:work/cassandra/mtdb/logs/loadgen ~/work/cassandra/mtdb/logs


TODO: move up
Prepare a local SSD volume and an EBS volume
	sudo mkfs.ext4 -m 0 -L ebsssdgp2 /dev/xvdd

	sudo vi /etc/fstab
		/dev/xvdb	/mnt/local-ssd	auto	defaults,nobootwait,comment=cloudconfig	0	2
		/dev/xvdd	/mnt/ebs-ssd-gp2	auto	defaults,nobootwait,comment=cloudconfig	0	2

	sudo mkdir -p /mnt/local-ssd \
	&& sudo mkdir -p /mnt/ebs-ssd-gp2 \
	&& sudo chown -R ubuntu /mnt/local-ssd \
	&& sudo chown -R ubuntu /mnt/ebs-ssd-gp2 \
	&& sudo ln -s /mnt/ebs-ssd-gp2 /mnt/cold-storage

	sudo umount mnt \
	&& sudo mount /mnt/local-ssd \
	&& sudo mount /mnt/ebs-ssd-gp2

	move cassandra directory, if it was not created on local-ssd
	~/work$ sudo mv apache-cassandra-2.2.3-src /mnt/local-ssd/
	$ rm cassandra
	$ ln -s /mnt/local-ssd/apache-cassandra-2.2.3-src cassandra

	TODO

	sudo mkdir /mnt/ebs-mag
	sudo chown -R ubuntu /mnt/ebs-mag

	sudo mkfs.ext4 -m 0 /dev/xvdf

	sudo vi /etc/fstab
		/dev/xvdf	/mnt/ebs-mag	auto	defaults,nobootwait,comment=cloudconfig	0	2


Copy logs to mts7
  rsync -av ubuntu@ec2-54-173-255-188.compute-1.amazonaws.com:work/cassandra/mtdb/logs ~/work/cassandra/mtdb/
